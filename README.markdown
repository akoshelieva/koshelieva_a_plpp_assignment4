# koshelieva_a_plpp_assignment4
https://github.com/akoshelieva/koshelieva_a_plpp_assignment посилання
## Опис проєкту
Цей проєкт є консольним текстовим редактором, реалізованим на C++. Редактор підтримує три типи рядків: `TextLine` (простий текст), `ChecklistLine` (елемент списку із статусом виконано/не виконано) та `ContactLine` (контактна інформація з ім’ям, прізвищем та email). Він дозволяє додавати, редагувати, шукати, зберігати, завантажувати та шифрувати текст за допомогою шифру Цезаря, реалізованого в динамічній бібліотеці (`libceasar.dll`). Також підтримується функціонал скасування та повторення дій із обмеженою історією (до 5 станів). Проєкт використовує принципи об’єктно-орієнтованого програмування (ООП), зокрема спадкування та поліморфізм.

## Можливості
### Типи рядків
- **TextLine**: Зберігає простий текстовий рядок (наприклад, "Привіт, світ!").
- **ChecklistLine**: Зберігає елемент списку з булевим статусом (виконано/не виконано).
- **ContactLine**: Зберігає контактну інформацію (ім’я, прізвище, email).

### Операції редагування
- Додавання нових рядків (`TextLine`, `ChecklistLine`, `ContactLine`).
- Вставка, видалення, копіювання та заміна рядків.
- Пошук тексту по всіх рядках (у серіалізованому форматі).

### Операції з файлами
- Збереження та завантаження тексту у файли.
- Збереження та завантаження зашифрованого тексту за допомогою шифру Цезаря.

### Скасування/Повторення
- Підтримує до 5 рівнів історії для скасування (`undo`) та повторення (`redo`) дій.

### Динамічна бібліотека
- Використовує шифр Цезаря, реалізований у `libceasar.dll` (або `libceasar.so` на Linux).

## Структура проєкту
```
koshelieva_a_plpp_assignment4/
├── main.cpp                # Точка входу з консольним інтерфейсом
├── text_editor.cpp         # Реалізація класу TextEditor
├── text_editor.h           # Заголовковий файл для TextEditor та класів Line
├── TextLine.cpp            # Реалізація класу TextLine
├── TextLine.h              # Заголовковий файл для TextLine
├── CheckList.cpp           # Реалізація класу ChecklistLine
├── CheckList.h             # Заголовковий файл для ChecklistLine
├── ContactLine.cpp         # Реалізація класу ContactLine
├── ContactLine.h           # Заголовковий файл для ContactLine
├── Line.cpp                # Реалізація десеріалізації Line
├── Line.h                  # Заголовковий файл для базового класу Line
├── caesar_cipher.cpp       # Реалізація класу CaesarCipher (завантаження DLL)
├── ceasar.cpp              # Реалізація функцій шифрування в DLL
├── CMakeLists.txt          # Конфігурація збірки CMake
├── README.md               # Цей файл
```

## Використання
Програма пропонує консольне меню з наступними опціями:
1. **Додати текстовий рядок**: Додає `TextLine` (наприклад, "Привіт, світ!").
2. **Додати рядок списку**: Додає `ChecklistLine` із текстом і статусом (0/1).
3. **Додати контактний рядок**: Додає `ContactLine` з ім’ям, прізвищем та email.
4. **Вставити рядок**: Вставляє рядок за індексом у форматі серіалізації (наприклад, `TEXT:Hello`).
5. **Видалити рядок**: Видаляє рядок за індексом.
6. **Копіювати рядок**: Копіює рядок у буфер обміну.
7. **Вставити скопійований рядок**: Вставляє рядок із буфера за індексом.
8. **Замінити рядок**: Замінює рядок за індексом на новий.
9. **Пошук тексту**: Шукає підрядок у всіх рядках (у серіалізованому форматі).
10. **Зберегти у файл**: Зберігає текст у файл.
11. **Завантажити з файлу**: Завантажує текст із файлу.
12. **Зберегти зашифровано**: Зберігає текст у зашифрованому вигляді (шифр Цезаря).
13. **Завантажити зашифровано**: Завантажує і розшифровує текст.
14. **Вивести все**: Виводить усі рядки.
15. **Скасувати**: Скасовує останню дію (до 5 дій).
16. **Повторити**: Повторює скасовану дію.
0. **Вихід**: Завершує програму.

### Приклад взаємодії
```
=== Text Editor Menu ===
1. Add Text Line
2. Add Checklist Line
3. Add Contact Line
...
Enter choice: 1
Enter text: Привіт, світ!
=== Text Editor Menu ===
Enter choice: 9
Enter text to search: Привіт
Found "Привіт" in line 0
=== Text Editor Menu ===
Enter choice: 12
Enter filename and key:
encrypted.txt
3
Encrypted text saved to encrypted.txt
```

## Особливості реалізації
- **Серіалізація/Десеріалізація**: Кожен рядок (`TextLine`, `ChecklistLine`, `ContactLine`) серіалізується у форматі `TYPE:дані` (наприклад, `TEXT:Привіт`, `CHECK:+:Task`, `CONTACT:Олена:Кошелєва:olena@example.com`).
- **Шифрування**: Використовується шифр Цезаря через `libceasar.dll`, де кожен байт зсувається на `key` (для шифрування) або назад (для дешифрування).
- **Undo/Redo**: Зберігається до 5 станів у векторі `changes` (серіалізовані стани редактора).
- **Пошук**: Шукає підрядок у серіалізованих даних рядків, включаючи метадані (`TEXT:`, `CHECK:`, `CONTACT:`).

